apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "warp-syncer.fullname" . }}
  labels:
    {{- include "warp-syncer.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      {{- include "warp-syncer.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "warp-syncer.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "warp-syncer.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: syncer
          command: ["/app/bin/syncer", "sync"] # Docker entrypoint equivalent      
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: SYNCER_DB_PING_TIMEOUT
              value: "15s"
            - name: SYNCER_LOG_LEVEL
              value: "DEBUG"
            - name: SYNCER_STOP_TIMEOUT
              value: "60s"
            - name: SYNCER_AR_LIMITER_INTERVAL
              value: "1m"
            - name: SYNCER_AR_LIMITER_BURST_SIZE
              value: "900"
            - name: SYNCER_LISTENER_QUEUE_SIZE
              value: "1"
            - name: SYNCER_LISTENER_PERIOD
              value: "1s"
            - name: SYNCER_LISTENER_REQUIRED_CONFIRMATION_BLOCKS
              value: "10"
            - name: SYNCER_LISTENER_NUM_WORKERS
              value: "50"
            - name: SYNCER_STORE_BATCH_SIZE
              value: "300"
            - name: SYNCER_STORE_MAX_TIME_IN_QUEUE
              value: "1s"
            - name: SYNCER_STORE_MAX_BACKOFF_INTERVAL
              value: "15s"
            - name: SYNCER_REST_LISTEN_ADDRESS
              value: ":8080"
          envFrom:
            - secretRef:
                name: syncer-prod
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /v1/health
              port: http
          readinessProbe:
            httpGet:
              path: /v1/health
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}

        - name: bundler
          command: ["/app/bin/syncer", "bundle"] # Docker entrypoint equivalent      
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: SYNCER_DB_PING_TIMEOUT
              value: "15s"
            - name: SYNCER_LOG_LEVEL
              value: "DEBUG"
            - name: SYNCER_STOP_TIMEOUT
              value: "60s"
            - name: SYNCER_REST_LISTEN_ADDRESS
              value: ":8080"
          envFrom:
            - secretRef:
                name: bundler-prod
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /v1/health
              port: http
          readinessProbe:
            httpGet:
              path: /v1/health
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}

        - name: checker
          command: ["/app/bin/syncer", "check"] # Docker entrypoint equivalent      
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: SYNCER_DB_PING_TIMEOUT
              value: "15s"
            - name: SYNCER_LOG_LEVEL
              value: "DEBUG"
            - name: SYNCER_STOP_TIMEOUT
              value: "60s"
          envFrom:
            - secretRef:
                name: checker-prod
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /v1/health
              port: http
          readinessProbe:
            httpGet:
              path: /v1/health
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
